### Unbind existing tmux key bindings (except 0-9).

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Set the prefix to ^A.
unbind C-b
set -g prefix C-f
bind C-f send-prefix

# Shut up.
# set -g quiet on
# Set Vi Mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

# set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color" # Using xterm because screen-256 doesn't support underlines in emacs

# setw -g monitor-activity on
# set -g visual-activity on

bind C-h previous-window
bind C-l next-window

# use the vim motion keys to move between panes
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# Smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

bind-key a send-prefix

# use the vim resize keys.
# # the number at the end is how much the pane will be resized,
# # and 1 is fairly small -- you might want to tweak this.
bind - resize-pane -D 2
bind + resize-pane -U 2
bind < resize-pane -L 2
bind > resize-pane -R 2

# use "v" and "s" to do vertical/horizontal splits, like vim
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind r source-file ~/.tmux.conf

# Set status bar
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g status-left '#[fg=colour235,bg=colour252,bold] #(whoami)@#h #[fg=colour252,bg=colour234,nobold] '
set -g status-right '#[fg=colour238] #[fg=colour245,bg=colour238,nobold] %R #[fg=colour254]#[fg=colour16,bg=colour254,bold] %d %b '
set -g window-status-format ' #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/} | sed "s#$(whoami)#~#g")#[fg=colour235] |'
set -g window-status-current-format '#[fg=colour25,bg=colour39,noreverse,bold] #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/} | sed "s#$(whoami)#~#g") '

# THESE ARE DEPRECATED
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39
# set -g message-fg colour16
# set -g message-bg colour221
# set -g message-attr bold
# set -g window-status-activity-attr bold

set-option -g status-interval 1

# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# control automatic window renaming
set-window-option -g automatic-rename on # auto name

# Fast command sequences
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# start window indexing at one (default = 0)
set -g base-index 1

# Set large history
set -g history-limit 100000

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window -c "#{pane_current_path}"
bind , command-prompt "rename-window '%%'"

# Copy mode
bind-key -T copy-mode-vi H send -X start-of-line
bind-key -T copy-mode-vi L send -X end-of-line
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection
bind-key -T copy-mode-vi Escape send -X cancel

# OSX Pasteboard
# set-option -g default-command "safe-reattach-to-user-namespace -l $SHELL"
# set-option -g default-command "command -v reattach-to-user-namespace >/dev/null \
    && reattach-to-user-namespace -l $SHELL || $SHELL"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe "safe-reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe "safe-reattach-to-user-namespace pbcopy"

# Pass env variables, needed for remote tmux ssh
# set -g update-environment -r
# set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# set-environment SSH_AUTH_SOCK $SSH_AUTH_SOCK
# set-environment SSH_AGENT_PID $SSH_AGENT_PID
#set-environment -g DOCKER_HOST ' $DOCKER_HOST'

# fix ssh agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/.auth_sock

# Fix underlines now showing up in tmux
# run "infocmp -x screen-256color; printf '\t%s\n' 'ncv@,'; } > /tmp/t && tic -x /tmp/t"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:smulx=\E[4\:%p1%dm'

# Urlview
bind-key u capture-pane \; save-buffer /tmp/active_tmux_buffer \; new-window -n urlview '$SHELL -c "urlview < /tmp/active_tmux_buffer && rm /tmp/active_tmux_buffer"'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
